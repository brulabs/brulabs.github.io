@use "../tools/mixins/button/button-unstyled" as *;
@use "../tools/functions/to-rem" as *;
@use "../settings/colors" as *;
@use 'sass:math';

$burger-size: to-rem(50px);
$bar-height: to-rem(3px);
$bar-color: $color-woodsmoke;
$bar-active-color: $color-white;
$transition-duration: 0.3s;

.burger {
    @include button-unstyled;

    position: absolute;
    z-index: 222;
    right: 15px;
    bottom: 15px;
    width: $burger-size;
    aspect-ratio: 1/1;
    cursor: pointer;

    .bar::before, .bar::after {
        content: '';
        position: absolute;
        transition-duration: $transition-duration;
        background-color: $bar-color;
        width: math.div($burger-size, 2);
        height: $bar-height;
    }

    .bar:first-child {
        transition-duration: $transition-duration;
        position: absolute;
        height: $bar-height;
        width: math.div($burger-size, 2);
        top: 50%;
        transform: translateY(-50%);
        background-color: $bar-color;
        left: 0;

        &::before {
            top: math.div(-$burger-size, 3);
            left: 0;
        }

        &::after {
            top: math.div($burger-size, 3);
            left: 0;
        }
    }

    .bar:last-child {
        transition-duration: $transition-duration;
        position: absolute;
        height: $bar-height;
        width: math.div($burger-size, 2);
        top: 50%;
        transform: translateY(-50%);
        background-color: $bar-color;
        left: math.div($burger-size, 2);

        &::before {
            top: math.div(-$burger-size, 3);
            left: 0;
        }

        &::after {
            top: math.div($burger-size, 3);
            left: 0;
        }
    }

    &.is-active {
        .bar {
            transition-duration: $transition-duration;
            background-color: transparent;
        }

        .bar::before, .bar::after {
            background-color: $bar-active-color;
        }

        .bar:first-child {
            &::before {
                transform: rotateZ(45deg) scaleX(1.4) translate($bar-height, $bar-height);
            }

            &::after {
                transform: rotateZ(-45deg) scaleX(1.4) translate($bar-height, -$bar-height);
            }
        }

        .bar:last-child {
            &::before {
                transform: rotateZ(-45deg) scaleX(1.4) translate(-$bar-height, $bar-height);
            }

            &::after {
                transform: rotateZ(45deg) scaleX(1.4) translate(-$bar-height, -$bar-height);
            }
        }
    }

    html.dark-mode & {
        pointer-events: none;
    }
}
